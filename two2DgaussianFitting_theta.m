function [fst, gfit] = two2DgaussianFitting_theta(img, disp)
%this might only work if i build in manual center selection
% img = imread(img);
[xdata, ydata] = meshgrid(1:size(img,2), 1:size(img,1));
close
figure
imagesc(img)
[x,y] = ginput(2);
close
%_______________________________________________________________________
%      1      2    3    4    5    6    7    8     9   10   11   12   13
F = @(back, amp1, x01, y01, th1, sx1, sy1, amp2, x02, y02, th2, sx2, sy2, x, y)...
    (back + ...
    amp1*exp(-( ...
            (cos(th1)^2/(2*sx1^2)+sin(th1)^2/(2*sy1^2))*(x-x01).^2 + ...
            (sin(2*th1)/(4*sy1^2)-sin(2*th1)/(4*sx1^2))*(x-x01).*(y-y01) + ...
            (sin(th1)^2/(2*sx1^2)+cos(th1)^2/(2*sy1^2))*(y-y01).^2)...
            ) + ...
    amp2*exp(-( ...
            (cos(th2)^2/(2*sx2^2)+sin(th2)^2/(2*sy2^2))*(x-x02).^2 + ...
            (sin(2*th2)/(4*sy2^2)-sin(2*th2)/(4*sx2^2))*(x-x02).*(y-y02) + ...
            (sin(th2)^2/(2*sx2^2)+cos(th2)^2/(2*sy2^2))*(y-y02).^2)...
            )...
     )*(sqrt((x01-x02)^2+(y01-y02)^2)>=3)...
      *(amp1>=.5*amp2)...
      *(amp2>=.5*amp1)...
      *(sx1>=.8*sx2)...
      *(sy1>=.8*sy2)...
      *(sx2>=.8*sx1)...
      *(sy2>=.8*sy1);
%            back                 amp                          xcenter             ycenter          th   sx            sy 
% c0 = double([mean(min(img)) max(img(:))-mean(min(img))    ceil(size(img,2)/4)   ceil(size(img,1)/2) pi/2 1             1 ...
%                             max(img(:))-mean(min(img))    3*ceil(size(img,2)/4) ceil(size(img,1)/2) pi/2 1             1]);
c0 = double([mean(min(img)) max(img(:))-mean(min(img))    x(1)                  y(1)                pi/2 1             1 ...
                            max(img(:))-mean(min(img))    x(2)                  y(2)                pi/2 1             1]);                        
low = double([min(img(:))   0.7*(max(img(:))-min(img(:))) 0                     0                   0    3             3 ...
                            0.7*(max(img(:))-min(img(:))) ceil(size(img,2)/2)   0                   0    3             3]);
up = double([mean(img(:))   1.3*(max(img(:))-min(img(:))) ceil(size(img,2)/2)   size(img,1)         pi   size(img,2)/2 size(img,1)/2 ...
                            1.3*(max(img(:))-min(img(:))) size(img,2)           size(img,1)         pi   size(img,2)/2 size(img,1)/2]);
xdata = double(xdata); ydata = double(ydata); img = double(img);
gfit = fit([xdata(:), ydata(:)], img(:), F, 'StartPoint', c0, 'Lower', low, 'Upper', up);
if disp
    fh_gauss_fit = figure;
    plot(gfit, [xdata(:), ydata(:)], img(:));
    try
        waitfor(fh_gauss_fit,'SelectionType','alt')
        close(fh_gauss_fit)
    catch
    end
end
c = coeffvalues(gfit);
fst.background = c(1);
fst.amp1 = c(2);
fst.amp2 = c(8);
fst.x1 = c(3);
fst.x2 = c(9);
fst.y1 = c(4);
fst.y2 = c(10);
fst.th1 = c(5);
fst.th2 = c(11);
fst.sx1 = c(6);
fst.sx2 = c(12);
fst.sy1 = c(7);
fst.sy2 = c(13);
end